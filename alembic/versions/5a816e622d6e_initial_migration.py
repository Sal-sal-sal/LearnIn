"""Initial migration

Revision ID: 5a816e622d6e
Revises: 
Create Date: 2025-07-08 14:33:27.185072

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '5a816e622d6e'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('videos')
    op.add_column('notes', sa.Column('header', sqlmodel.sql.sqltypes.AutoString(), nullable=False))
    op.add_column('notes', sa.Column('text', sqlmodel.sql.sqltypes.AutoString(), nullable=False))
    op.add_column('notes', sa.Column('completed', sa.Boolean(), nullable=False))
    op.add_column('notes', sa.Column('created_at', sa.DateTime(), nullable=False))
    op.drop_index(op.f('ix_notes_id'), table_name='notes')
    op.drop_index(op.f('ix_notes_title'), table_name='notes')
    op.drop_column('notes', 'content')
    op.drop_column('notes', 'title')
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('notes', sa.Column('title', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('notes', sa.Column('content', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.create_index(op.f('ix_notes_title'), 'notes', ['title'], unique=False)
    op.create_index(op.f('ix_notes_id'), 'notes', ['id'], unique=False)
    op.drop_column('notes', 'created_at')
    op.drop_column('notes', 'completed')
    op.drop_column('notes', 'text')
    op.drop_column('notes', 'header')
    op.create_table('videos',
    sa.Column('uuid', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('prompt', sa.VARCHAR(), autoincrement=False, nullable=False),
    sa.Column('data', postgresql.BYTEA(), autoincrement=False, nullable=True),
    sa.Column('created_at', postgresql.TIMESTAMP(), autoincrement=False, nullable=False),
    sa.PrimaryKeyConstraint('uuid', name=op.f('videos_pkey'))
    )
    # ### end Alembic commands ###
